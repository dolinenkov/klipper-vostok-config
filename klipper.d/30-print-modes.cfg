
# [gcode_macro SWAP_CLEAN]
# gcode:
#     SAVE_GCODE_STATE NAME=SWAP
#     M83
#     G1 E20 F200
#     G1 E-2 F1800
#     RESTORE_GCODE_STATE NAME=SWAP

# Print Job Management #########################################################
[gcode_macro START_PRINT]
## PrusaSliser: 
# M190 S0
# M109 S0
# ;IDEX_MODE MODE=COPY
# ;IDEX_MODE MODE=MIRROR
# START_PRINT EXTRUDER=[current_extruder] EXTRUDERS=0 EXTRUDER_TEMP={first_layer_temperature[0]} EXTRUDER1_TEMP={first_layer_temperature[1]} BED_TEMP=[first_layer_bed_temperature]
## Cura: 
# M190 S0
# M109 S0
# ;IDEX_MODE MODE=COPY
# ;IDEX_MODE MODE=MIRROR
# START_PRINT EXTRUDER={adhesion_extruder_nr} EXTRUDERS={extruders_enabled_count} EXTRUDER_TEMP={material_print_temperature_layer_0, 0} EXTRUDER1_TEMP={material_print_temperature_layer_0, 1} BED_TEMP={material_bed_temperature_layer_0}
description: Start routine for the print
variable_retract: 1
gcode: 
    {% set extruder = params.EXTRUDER|default(0)|int %}
    {% set extruders = params.EXTRUDERS|default(0)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(230)|float %}
    {% set extruder1_temp = params.EXTRUDER1_TEMP|default(230)|float %}
    {% set bed_temp = params.BED_TEMP|default(75)|float %}
    {% if bed_temp > 90 %}
        {% set bed_temp_preheat = (bed_temp * 0.85)|int %}
    {% else %}
        {% set bed_temp_preheat = (bed_temp * 0.85)|int %}
    {% endif %}
    CLEAR_PAUSE
    M220 S100                                                                               # reset feedrate
    M221 S100                                                                               # reset flowrate
    G90                                                                                     # absolute positioning
    M83                                                                                     # relative extrusion mode
    ### Heating ###
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}                              # set bed temp
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp_preheat}                           # wait until bed is partially heated
    {% if extruders < 2 %}
        {% if extruder == 0 %}
            {% if printer["gcode_macro IDEX_MODE"].mode == "COPY" or  printer["gcode_macro IDEX_MODE"].mode == "MIRROR" %}
                SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
                SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
                SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={extruder1_temp}
            {% else %}
                SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
                SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET=0
            {% endif %}    
        {% else %}
            {% if printer["gcode_macro IDEX_MODE"].mode == "COPY" or  printer["gcode_macro IDEX_MODE"].mode == "MIRROR" %}
                {action_raise_error("You should use the first toolhead for COPY and MIRROR modes")}   
            {% else %}
                SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={extruder1_temp}
                SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
            {% endif %}
        {% endif %}
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
        SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={extruder1_temp}
    {% endif %}
    {% if extruders < 2 %}
        {% if extruder == 0 %}
            {% if printer["gcode_macro IDEX_MODE"].mode == "COPY" or  printer["gcode_macro IDEX_MODE"].mode == "MIRROR" %}
                SET_DUAL_CARRIAGE CARRIAGE=1 MODE={printer["gcode_macro IDEX_MODE"].mode}
            {% endif %}
        {% else %}
            SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
        {% endif %}
    {% endif %}
    ### Homing ###
    SAVE_DUAL_CARRIAGE_STATE NAME=setup_input_shaping
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_INPUT_SHAPER SHAPER_TYPE_X=mzv SHAPER_FREQ_X=92.6 SHAPER_TYPE_Y=mzv SHAPER_FREQ_Y=92.6
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_INPUT_SHAPER SHAPER_TYPE_X=mzv SHAPER_FREQ_X=92.6 SHAPER_TYPE_Y=mzv SHAPER_FREQ_Y=92.6
    RESTORE_DUAL_CARRIAGE_STATE NAME=setup_input_shaping
    # SET_GCODE_OFFSET Z=0.0
    G28
    G0 Z10 F600
    ### Final heating ###
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}
    {% if extruders < 2 %}
        {% if extruder == 0 %}
            {% if printer["gcode_macro IDEX_MODE"].mode == "COPY" or  printer["gcode_macro IDEX_MODE"].mode == "MIRROR" %}
                TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
                TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={extruder1_temp}
            {% else %}
                TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
            {% endif %}
        {% else %}
            TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={extruder1_temp}
        {% endif %}
    {% else %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}    
        TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM={extruder1_temp}
    {% endif %}
    CLEAN_NOZZLE
    M400
    {% if printer["gcode_macro IDEX_MODE"].mode == "COPY" %}
        SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
        G1 X{printer.toolhead.axis_maximum.x/2} F10000
        SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
    {% endif %}

[gcode_macro CLEAN_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=CLEAN_NOZZLE
    G91
    {% set active_extruder_name = printer.toolhead.extruder %}
    {% for extruder_name in ['extruder', 'extruder1'] %}
      {% if printer[extruder_name].can_extrude|lower == 'true' and printer[extruder_name].temperature|int > 170 %}
        ACTIVATE_EXTRUDER EXTRUDER={extruder_name}
        G1 E20 F200
      {% endif %}
    {% endfor %}
    {% if active_extruder_name != printer.toolhead.extruder %}
      ACTIVATE_EXTRUDER EXTRUDER={active_extruder_name}
    {% endif %}
    RESTORE_GCODE_STATE NAME=CLEAN_NOZZLE
    G1 Y13 F8000                                                                   

[gcode_macro END_PRINT]
gcode:
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = 100 %}
    {% if act_z < lift_z %}
        {% set z_park = lift_z %}
    {% else %}
        {% set z_park = act_z %}
    {% endif %}
    CLEAR_PAUSE
    #POWER_LOSS_TIMER_STOP
    #POWER_LOSS_CLEAR
    G91                                                                                     # relative positioning
    G0 Z2 F600                                                                              # raise Z
    {% if printer[printer.toolhead.extruder].can_extrude|lower == 'true' %}
        G1 E-1 F1500                                                                        # retract
    {% else %}
        RESPOND TYPE=command MSG="Extruder is not hot enough"
    {% endif %}
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1                                                                                   
    G28 X
    G90    
    G1 Z{z_park} F800                                                                       # raise Z
    G28 Y
    #BEEP
    G4 P400
    #BEEP
    G4 P400
    #BEEP     
    G4 P400
    M84                                                                                     # turn off all motors
    M107                                                                                    # turn off fan
    TURN_OFF_HEATERS
    # SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    # SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET=0
    IDEX_MODE
    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
    # UPDATE_DELAYED_GCODE ID=DELAY_HEATERS DURATION=180


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode: 
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    END_PRINT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: BASE_PAUSE
gcode: 
    {% if printer[printer.toolhead.extruder].can_extrude|lower == 'true' %}
        G1 E-3 F800                                                                    # retract
    {% else %}
        RESPOND TYPE=command MSG="Extruder is not hot enough"
    {% endif %}
    BASE_PAUSE
    PARK

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: BASE_RESUME
gcode: 
   {% if printer.extruder.can_extrude|lower == 'true' %}
       G1 E10 F800
   {% else %}
        RESPOND TYPE=command MSG="Extruder is not hot enough"
   {% endif %}  
    BASE_RESUME VELOCITY=200

[gcode_macro PARK]
description: Park toolhead
gcode:
    {% if printer.dual_carriage.carriage_0 == "PRIMARY" %}
        {% set x_park = printer.configfile.settings.stepper_x.position_min+0.1 %}
    {% elif printer.dual_carriage.carriage_1 == "PRIMARY" %}
        {% set x_park = printer.configfile.settings.dual_carriage.position_max-0.1 %}
    {% else %}
        {% set x_park = printer.configfile.settings.stepper_x.position_min+0.1 %}
    {% endif %}
    {% set y_park = printer.configfile.settings.stepper_y.position_min+1.5 %}
    {% set z_park_delta = 5.0 %}
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park_delta) %}
        {% set z_safe = z_park_delta %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91
        G1 Z{z_safe} F450
        G90
        G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
    {% else %}
        RESPOND TYPE=command MSG="Printer not homed"
    {% endif %} 

# [gcode_macro FILAMENT_CHANGE]
# gcode:
# 	SAVE_GCODE_STATE NAME=CHANGE_FILAMENT_STATE
# 	{% set timer = params.T|default(60)|float %}
# 	{% set unload = params.U|default(70)|float %}
# 	{% set load = params.L|default(100)|float %}
#     {% if printer.pause_resume.is_paused %}
#         RESPOND TYPE=command MSG="Already paused"
#     {% else %}
#         {% if printer.toolhead.homed_axes != "xyz" %}
#             RESPOND TYPE=command MSG="Homing"
#             G28                                                                     # home if not homed
#         {% else %}
#             RESPOND TYPE=command MSG="Pausing print"
#             PAUSE
#         {% endif %}
#     {% endif %}
#     RESPOND TYPE=command MSG="Changing filament..."
# 	FILAMENT_UNLOAD U={unload}
# 	RESTORE_GCODE_STATE NAME=CHANGE_FILAMENT_STATE

# [gcode_macro SEARCH_VARS]
# #   $ SEARCH_VARS s="profile"
# gcode:
#     {% set search = params.S|lower %}
#     {% set ns = namespace() %}
#     {% for item in printer  %}
#         {% if ' ' in item %}
#             {% set ns.path = ['printer', "['%s']" % (item), ''] %}
#         {% else %}
#             {% set ns.path = ['printer.', item, ''] %}   
#         {% endif %} 

#         {% if search in ns.path|lower %}
#             { action_respond_info(ns.path|join) }
#         {% endif %} 

#         {% if printer[item].items() %}
#             {% for childkey, child in printer[item].items() recursive %}
#                 {% set ns.path = ns.path[:loop.depth|int + 1] %}

#                 {% if ' ' in childkey %}
#                     {% set null = ns.path.append("['%s']" % (childkey)) %}
#                 {% else %}
#                     {% set null = ns.path.append(".%s" % (childkey)) %}
#                 {% endif %} 

#                 {% if child is mapping  %}
#                     { loop(child.items()) }
#                 {% else %}
#                     {% if search in ns.path|lower %}
#                         { action_respond_info("%s : %s" % (ns.path|join, child)) }   
#                     {% endif %} 
#                 {% endif %} 
                
#             {% endfor %}
#         {% endif %} 
#     {% endfor %}

[gcode_macro IDEX_MODE]
variable_mode: ''
gcode:
    {% set MODE = params.MODE|default("PRIMARY")|string %}
    SET_GCODE_VARIABLE MACRO=IDEX_MODE VARIABLE=mode VALUE='"{MODE}"'